#
# Multistage docker image: allows to cross-compile and build the production docker image
# in a single step
#

#
# First stage: builder Docker
#
FROM fmontorsi_builder:1.0 as mytest_builder

# additional utilities over the base builder image:
RUN yum install -y zeromq-devel rsync
RUN gcc --version
RUN gdb --version

# cross-compile the software using the builder image toolchain:
RUN mkdir -p /home/builder /opt/dest
COPY *.cpp *.h Makefile /home/builder/
RUN ls -la /home/builder/
RUN make -C /home/builder/ all
RUN make -C /home/builder/ install DESTDIR=/opt/mytest
RUN lddtree -l /opt/mytest/bin/mytest | tee -a /home/builder/dependency_map.txt

RUN rsync -av -L -K --files-from=/home/builder/dependency_map.txt / /production-docker-rootfs/
##RUN tar -c -v -z --absolute-names --files-from=/home/builder/dependency_map.txt -f /opt/dest/output.tar.gz

#
# Second stage: production Docker container
#

FROM scratch
COPY --from=mytest_builder /production-docker-rootfs/ /
EXPOSE 8080
ENTRYPOINT [ "/opt/mytest/bin/mytest" ]
